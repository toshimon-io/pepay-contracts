/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  JayLiquidityStaking,
  JayLiquidityStakingInterface,
} from "../../contracts/JayLiquidityStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidityToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "harvestedAmount",
        type: "uint256",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "init",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialLPs",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
    ],
    name: "initalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "previusRewardTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAmountStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerTokenOnEntry",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040526000600760006101000a81548160ff0219169083151502179055506000600760016101000a81548160ff0219169083151502179055503480156200004757600080fd5b50604051620026073803806200260783398181016040528101906200006d919062000208565b60016000819055506200009562000089620000d060201b60201c565b620000d860201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506200023a565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001d082620001a3565b9050919050565b620001e281620001c3565b8114620001ee57600080fd5b50565b6000815190506200020281620001d7565b92915050565b6000602082840312156200022157620002206200019e565b5b60006200023184828501620001f1565b91505092915050565b60805161239c6200026b6000396000818161057401528181610698015281816108610152610b19015261239c6000f3fe6080604052600436106101235760003560e01c80638d869342116100a0578063df136d6511610064578063df136d65146103bb578063e1c7392a146103e6578063e34d5d2714610411578063f2fde38b1461043c578063fe961f61146104655761012a565b80638d869342146102d45780638da5cb5b146102ff578063b6b55f251461032a578063be9a655514610353578063c00007b01461037e5761012a565b8063399080ec116100e7578063399080ec1461020357806343cd8f7e1461024057806354cde9f81461026b578063715018a6146102945780638705fcd4146102ab5761012a565b80630917e7761461012f5780631959a0021461015a57806325caa262146101985780632e1a7d4d146101c357806335975a37146101ec5761012a565b3661012a57005b600080fd5b34801561013b57600080fd5b50610144610490565b60405161015191906116b0565b60405180910390f35b34801561016657600080fd5b50610181600480360381019061017c919061173d565b61049a565b60405161018f92919061176a565b60405180910390f35b3480156101a457600080fd5b506101ad6104be565b6040516101ba91906116b0565b60405180910390f35b3480156101cf57600080fd5b506101ea60048036038101906101e591906117bf565b6104c6565b005b3480156101f857600080fd5b50610201610625565b005b34801561020f57600080fd5b5061022a6004803603810190610225919061173d565b61064a565b60405161023791906116b0565b60405180910390f35b34801561024c57600080fd5b50610255610696565b604051610262919061184b565b60405180910390f35b34801561027757600080fd5b50610292600480360381019061028d9190611a82565b6106ba565b005b3480156102a057600080fd5b506102a9610906565b005b3480156102b757600080fd5b506102d260048036038101906102cd919061173d565b61091a565b005b3480156102e057600080fd5b506102e961099f565b6040516102f691906116b0565b60405180910390f35b34801561030b57600080fd5b50610314610a39565b6040516103219190611b1c565b60405180910390f35b34801561033657600080fd5b50610351600480360381019061034c91906117bf565b610a63565b005b34801561035f57600080fd5b50610368610bcb565b6040516103759190611b52565b60405180910390f35b34801561038a57600080fd5b506103a560048036038101906103a0919061173d565b610bde565b6040516103b291906116b0565b60405180910390f35b3480156103c757600080fd5b506103d0610d2d565b6040516103dd91906116b0565b60405180910390f35b3480156103f257600080fd5b506103fb610d33565b6040516104089190611b52565b60405180910390f35b34801561041d57600080fd5b50610426610d46565b60405161043391906116b0565b60405180910390f35b34801561044857600080fd5b50610463600480360381019061045e919061173d565b610d4c565b005b34801561047157600080fd5b5061047a610dcf565b60405161048791906116b0565b60405180910390f35b6000600454905090565b60066020528060005260406000206000915090508060000154908060010154905082565b600047905090565b6104ce610dd5565b600760019054906101000a900460ff166104e757600080fd5b60006104f1610e24565b905081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546105459190611b9c565b9250508190555061055461100a565b81600460008282546105669190611b9c565b925050819055506105b833837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166110ed9092919063ffffffff16565b60008111156105cb576105ca81611173565b5b3373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243648360405161061191906116b0565b60405180910390a250610622611223565b50565b61062d61122d565b6001600760016101000a81548160ff021916908315150217905550565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6106c261122d565b600760009054906101000a900460ff1615610712576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070990611c2d565b60405180910390fd5b6001600760006101000a81548160ff0219169083151502179055506000805b835181101561081557604051806040016040528084838151811061075857610757611c4d565b5b6020026020010151815260200160008152506006600086848151811061078157610780611c4d565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101559050508281815181106107ed576107ec611c4d565b5b6020026020010151826108009190611c7c565b9150808061080d90611cb0565b915050610731565b50838114610858576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084f90611d44565b60405180910390fd5b806004819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016108bc93929190611d64565b6020604051808303816000875af11580156108db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ff9190611dc7565b5050505050565b61090e61122d565b61091860006112ab565b565b61092261122d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361095b57600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806004541115610a3157600454670de0b6b3a7640000600554600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631476109ff9190611c7c565b610a099190611b9c565b610a139190611df4565b610a1d9190611e7d565b600354610a2a9190611c7c565b9050610a36565b600090505b90565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610a6b610dd5565b6000806004541115610a8657610a7f610e24565b9050610a97565b600060038190555060006005819055505b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610ae99190611c7c565b92505081905550610af861100a565b8160046000828254610b0a9190611c7c565b92505081905550610b5e3330847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611371909392919063ffffffff16565b6000811115610b7157610b7081611173565b5b3373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c83604051610bb791906116b0565b60405180910390a250610bc8611223565b50565b600760019054906101000a900460ff1681565b6000806004541115610d23576000600454670de0b6b3a7640000600554600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163147610c409190611c7c565b610c4a9190611b9c565b610c549190611df4565b610c5e9190611e7d565b600354610c6b9190611c7c565b9050670de0b6b3a7640000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015482610cc49190611b9c565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610d119190611df4565b610d1b9190611e7d565b915050610d28565b600090505b919050565b60035481565b600760009054906101000a900460ff1681565b60055481565b610d5461122d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610dc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dba90611f20565b60405180910390fd5b610dcc816112ab565b50565b60045481565b600260005403610e1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1190611f8c565b60405180910390fd5b6002600081905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f61510896040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610e9057600080fd5b505af1158015610ea4573d6000803e3d6000fd5b505050506000479050600454670de0b6b3a764000060055483610ec79190611b9c565b610ed19190611df4565b610edb9190611e7d565b600354610ee89190611c7c565b6003819055506000670de0b6b3a7640000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600354610f499190611b9c565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610f969190611df4565b610fa09190611e7d565b90508082610fae9190611b9c565b6005819055503373ffffffffffffffffffffffffffffffffffffffff167fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba82604051610ffa91906116b0565b60405180910390a2809250505090565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154036110a1576000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506110eb565b600354600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b565b61116e8363a9059cbb60e01b848460405160240161110c929190611fac565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113fa565b505050565b60003373ffffffffffffffffffffffffffffffffffffffff168260405161119990612006565b60006040518083038185875af1925050503d80600081146111d6576040519150601f19603f3d011682016040523d82523d6000602084013e6111db565b606091505b505090508061121f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121690612067565b60405180910390fd5b5050565b6001600081905550565b6112356114c2565b73ffffffffffffffffffffffffffffffffffffffff16611253610a39565b73ffffffffffffffffffffffffffffffffffffffff16146112a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a0906120d3565b60405180910390fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6113f4846323b872dd60e01b85858560405160240161139293929190611d64565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113fa565b50505050565b600061145c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166114ca9092919063ffffffff16565b905060008151148061147e57508080602001905181019061147d9190611dc7565b5b6114bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b490612165565b60405180910390fd5b505050565b600033905090565b60606114d984846000856114e2565b90509392505050565b606082471015611527576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151e906121f7565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611550919061227d565b60006040518083038185875af1925050503d806000811461158d576040519150601f19603f3d011682016040523d82523d6000602084013e611592565b606091505b50915091506115a3878383876115af565b92505050949350505050565b60608315611611576000835103611609576115c985611624565b611608576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ff906122e0565b60405180910390fd5b5b82905061161c565b61161b8383611647565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008251111561165a5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161168e9190612344565b60405180910390fd5b6000819050919050565b6116aa81611697565b82525050565b60006020820190506116c560008301846116a1565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061170a826116df565b9050919050565b61171a816116ff565b811461172557600080fd5b50565b60008135905061173781611711565b92915050565b600060208284031215611753576117526116d5565b5b600061176184828501611728565b91505092915050565b600060408201905061177f60008301856116a1565b61178c60208301846116a1565b9392505050565b61179c81611697565b81146117a757600080fd5b50565b6000813590506117b981611793565b92915050565b6000602082840312156117d5576117d46116d5565b5b60006117e3848285016117aa565b91505092915050565b6000819050919050565b600061181161180c611807846116df565b6117ec565b6116df565b9050919050565b6000611823826117f6565b9050919050565b600061183582611818565b9050919050565b6118458161182a565b82525050565b6000602082019050611860600083018461183c565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6118b48261186b565b810181811067ffffffffffffffff821117156118d3576118d261187c565b5b80604052505050565b60006118e66116cb565b90506118f282826118ab565b919050565b600067ffffffffffffffff8211156119125761191161187c565b5b602082029050602081019050919050565b600080fd5b600061193b611936846118f7565b6118dc565b9050808382526020820190506020840283018581111561195e5761195d611923565b5b835b8181101561198757806119738882611728565b845260208401935050602081019050611960565b5050509392505050565b600082601f8301126119a6576119a5611866565b5b81356119b6848260208601611928565b91505092915050565b600067ffffffffffffffff8211156119da576119d961187c565b5b602082029050602081019050919050565b60006119fe6119f9846119bf565b6118dc565b90508083825260208201905060208402830185811115611a2157611a20611923565b5b835b81811015611a4a5780611a3688826117aa565b845260208401935050602081019050611a23565b5050509392505050565b600082601f830112611a6957611a68611866565b5b8135611a798482602086016119eb565b91505092915050565b600080600060608486031215611a9b57611a9a6116d5565b5b6000611aa9868287016117aa565b935050602084013567ffffffffffffffff811115611aca57611ac96116da565b5b611ad686828701611991565b925050604084013567ffffffffffffffff811115611af757611af66116da565b5b611b0386828701611a54565b9150509250925092565b611b16816116ff565b82525050565b6000602082019050611b316000830184611b0d565b92915050565b60008115159050919050565b611b4c81611b37565b82525050565b6000602082019050611b676000830184611b43565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ba782611697565b9150611bb283611697565b9250828203905081811115611bca57611bc9611b6d565b5b92915050565b600082825260208201905092915050565b7f436f6e747261637420616c726561647920696e697469616c697a656400000000600082015250565b6000611c17601c83611bd0565b9150611c2282611be1565b602082019050919050565b60006020820190508181036000830152611c4681611c0a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611c8782611697565b9150611c9283611697565b9250828201905080821115611caa57611ca9611b6d565b5b92915050565b6000611cbb82611697565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ced57611cec611b6d565b5b600182019050919050565b7f546f74616c7320646f6e74206d61746368000000000000000000000000000000600082015250565b6000611d2e601183611bd0565b9150611d3982611cf8565b602082019050919050565b60006020820190508181036000830152611d5d81611d21565b9050919050565b6000606082019050611d796000830186611b0d565b611d866020830185611b0d565b611d9360408301846116a1565b949350505050565b611da481611b37565b8114611daf57600080fd5b50565b600081519050611dc181611d9b565b92915050565b600060208284031215611ddd57611ddc6116d5565b5b6000611deb84828501611db2565b91505092915050565b6000611dff82611697565b9150611e0a83611697565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611e4357611e42611b6d565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611e8882611697565b9150611e9383611697565b925082611ea357611ea2611e4e565b5b828204905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611f0a602683611bd0565b9150611f1582611eae565b604082019050919050565b60006020820190508181036000830152611f3981611efd565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611f76601f83611bd0565b9150611f8182611f40565b602082019050919050565b60006020820190508181036000830152611fa581611f69565b9050919050565b6000604082019050611fc16000830185611b0d565b611fce60208301846116a1565b9392505050565b600081905092915050565b50565b6000611ff0600083611fd5565b9150611ffb82611fe0565b600082019050919050565b600061201182611fe3565b9150819050919050565b7f455448205472616e73666572206661696c65642e000000000000000000000000600082015250565b6000612051601483611bd0565b915061205c8261201b565b602082019050919050565b6000602082019050818103600083015261208081612044565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006120bd602083611bd0565b91506120c882612087565b602082019050919050565b600060208201905081810360008301526120ec816120b0565b9050919050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b600061214f602a83611bd0565b915061215a826120f3565b604082019050919050565b6000602082019050818103600083015261217e81612142565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006121e1602683611bd0565b91506121ec82612185565b604082019050919050565b60006020820190508181036000830152612210816121d4565b9050919050565b600081519050919050565b60005b83811015612240578082015181840152602081019050612225565b60008484015250505050565b600061225782612217565b6122618185611fd5565b9350612271818560208601612222565b80840191505092915050565b6000612289828461224c565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006122ca601d83611bd0565b91506122d582612294565b602082019050919050565b600060208201905081810360008301526122f9816122bd565b9050919050565b600081519050919050565b600061231682612300565b6123208185611bd0565b9350612330818560208601612222565b6123398161186b565b840191505092915050565b6000602082019050818103600083015261235e818461230b565b90509291505056fea264697066735822122029f57b86f6f073128a7424d0000cf4d105cbb7b5d3be2c220e1721932b8a1d5e64736f6c63430008100033";

type JayLiquidityStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JayLiquidityStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JayLiquidityStaking__factory extends ContractFactory {
  constructor(...args: JayLiquidityStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _liquidityToken: string,
    overrides?: Overrides & { from?: string }
  ): Promise<JayLiquidityStaking> {
    return super.deploy(
      _liquidityToken,
      overrides || {}
    ) as Promise<JayLiquidityStaking>;
  }
  override getDeployTransaction(
    _liquidityToken: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_liquidityToken, overrides || {});
  }
  override attach(address: string): JayLiquidityStaking {
    return super.attach(address) as JayLiquidityStaking;
  }
  override connect(signer: Signer): JayLiquidityStaking__factory {
    return super.connect(signer) as JayLiquidityStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JayLiquidityStakingInterface {
    return new utils.Interface(_abi) as JayLiquidityStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JayLiquidityStaking {
    return new Contract(address, _abi, signerOrProvider) as JayLiquidityStaking;
  }
}
