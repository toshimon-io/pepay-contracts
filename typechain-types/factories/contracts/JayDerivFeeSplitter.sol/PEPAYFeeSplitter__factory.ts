/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PEPAYFeeSplitter,
  PEPAYFeeSplitterInterface,
} from "../../../contracts/JayDerivFeeSplitter.sol/PEPAYFeeSplitter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "min",
        type: "uint256",
      },
    ],
    name: "MinValueChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "teamWallet",
        type: "address",
      },
    ],
    name: "OPWalletChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "teamWallet",
        type: "address",
      },
    ],
    name: "StakeWalletChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "teamWallet",
        type: "address",
      },
    ],
    name: "TeamWalletChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "FEE_BASE_1000",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OP_FEE",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STAKER_FEE",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TEAM_FEE",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "min",
        type: "uint256",
      },
    ],
    name: "setMin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setOPWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setSTAKERWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setTEAMWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526101f4600660006101000a81548161ffff021916908361ffff16021790555060fa600660026101000a81548161ffff021916908361ffff16021790555060fa600660046101000a81548161ffff021916908361ffff1602179055503480156200006c57600080fd5b50604051620018cf380380620018cf8339818101604052810190620000929190620002ad565b620000b2620000a66200017760201b60201c565b6200017f60201b60201c565b60018081905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200012b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001229062000340565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505069d3c21bcecceda10000006005819055505062000362565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002758262000248565b9050919050565b620002878162000268565b81146200029357600080fd5b50565b600081519050620002a7816200027c565b92915050565b600060208284031215620002c657620002c562000243565b5b6000620002d68482850162000296565b91505092915050565b600082825260208201905092915050565b7f63616e6e6f742073657420746f20307830206164647265737300000000000000600082015250565b600062000328601983620002df565b91506200033582620002f0565b602082019050919050565b600060208201905081810360008301526200035b8162000319565b9050919050565b6080516115436200038c600039600081816105f1015281816107b7015261097101526115436000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063efa6d89e11610066578063efa6d89e14610201578063f2fde38b1461021d578063f615108914610239578063f7c618c114610243576100ea565b80638da5cb5b146101a7578063ce1b81b4146101c5578063eb070f01146101e3576100ea565b806337a7f2b7116100c857806337a7f2b71461014557806345dc3dd814610163578063509bb1d71461017f578063715018a61461019d576100ea565b806312cdef2f146100ef578063236ff0501461010d57806329de6d2014610129575b600080fd5b6100f7610261565b6040516101049190610d02565b60405180910390f35b61012760048036038101906101229190610d80565b610275565b005b610143600480360381019061013e9190610d80565b610331565b005b61014d6103ec565b60405161015a9190610dc6565b60405180910390f35b61017d60048036038101906101789190610e0d565b6103f2565b005b61018761043b565b6040516101949190610d02565b60405180910390f35b6101a5610441565b005b6101af610455565b6040516101bc9190610e49565b60405180910390f35b6101cd61047e565b6040516101da9190610d02565b60405180910390f35b6101eb610492565b6040516101f89190610d02565b60405180910390f35b61021b60048036038101906102169190610d80565b6104a6565b005b61023760048036038101906102329190610d80565b610562565b005b6102416105e5565b005b61024b6107b5565b6040516102589190610ec3565b60405180910390f35b600660029054906101000a900461ffff1681565b61027d6107d9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102b657600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f26200f13ada5b00f88e194968603b55cb51194290592d1651c9ea67a7cbece69816040516103269190610e49565b60405180910390a150565b6103396107d9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90610f3b565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60055481565b6103fa6107d9565b806005819055507f602c0b6dec543ffc3ad2ea97c0617262660f6a61286ec63f00a4dcc057f6f428816040516104309190610dc6565b60405180910390a150565b6103e881565b6104496107d9565b6104536000610857565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600660049054906101000a900461ffff1681565b600660009054906101000a900461ffff1681565b6104ae6107d9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104e757600080fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7ad74febc2ed115efdd6c41995a87179ce86aa97456ea38b27b790ffe4516cee816040516105579190610e49565b60405180910390a150565b61056a6107d9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d090610fcd565b60405180910390fd5b6105e281610857565b50565b6105ed61091b565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106489190610e49565b602060405180830381865afa158015610665573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106899190611002565b90506005548111156107aa576106f1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166103e861ffff16600660049054906101000a900461ffff1661ffff16846106e2919061105e565b6106ec91906110e7565b61096a565b61074d600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166103e861ffff16600660009054906101000a900461ffff1661ffff168461073e919061105e565b61074891906110e7565b61096a565b6107a9600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166103e861ffff16600660029054906101000a900461ffff1661ffff168461079a919061105e565b6107a491906110e7565b61096a565b5b506107b36109b9565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b6107e16109c2565b73ffffffffffffffffffffffffffffffffffffffff166107ff610455565b73ffffffffffffffffffffffffffffffffffffffff1614610855576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084c90611164565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260015403610960576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610957906111d0565b60405180910390fd5b6002600181905550565b6109b582827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166109ca9092919063ffffffff16565b5050565b60018081905550565b600033905090565b610a4b8363a9059cbb60e01b84846040516024016109e99291906111f0565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a50565b505050565b6000610ab2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610b189092919063ffffffff16565b9050600081511480610ad4575080806020019051810190610ad39190611251565b5b610b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0a906112f0565b60405180910390fd5b505050565b6060610b278484600085610b30565b90509392505050565b606082471015610b75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6c90611382565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610b9e9190611413565b60006040518083038185875af1925050503d8060008114610bdb576040519150601f19603f3d011682016040523d82523d6000602084013e610be0565b606091505b5091509150610bf187838387610bfd565b92505050949350505050565b60608315610c5f576000835103610c5757610c1785610c72565b610c56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4d90611476565b60405180910390fd5b5b829050610c6a565b610c698383610c95565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115610ca85781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdc91906114eb565b60405180910390fd5b600061ffff82169050919050565b610cfc81610ce5565b82525050565b6000602082019050610d176000830184610cf3565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d4d82610d22565b9050919050565b610d5d81610d42565b8114610d6857600080fd5b50565b600081359050610d7a81610d54565b92915050565b600060208284031215610d9657610d95610d1d565b5b6000610da484828501610d6b565b91505092915050565b6000819050919050565b610dc081610dad565b82525050565b6000602082019050610ddb6000830184610db7565b92915050565b610dea81610dad565b8114610df557600080fd5b50565b600081359050610e0781610de1565b92915050565b600060208284031215610e2357610e22610d1d565b5b6000610e3184828501610df8565b91505092915050565b610e4381610d42565b82525050565b6000602082019050610e5e6000830184610e3a565b92915050565b6000819050919050565b6000610e89610e84610e7f84610d22565b610e64565b610d22565b9050919050565b6000610e9b82610e6e565b9050919050565b6000610ead82610e90565b9050919050565b610ebd81610ea2565b82525050565b6000602082019050610ed86000830184610eb4565b92915050565b600082825260208201905092915050565b7f63616e6e6f742073657420746f20307830206164647265737300000000000000600082015250565b6000610f25601983610ede565b9150610f3082610eef565b602082019050919050565b60006020820190508181036000830152610f5481610f18565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610fb7602683610ede565b9150610fc282610f5b565b604082019050919050565b60006020820190508181036000830152610fe681610faa565b9050919050565b600081519050610ffc81610de1565b92915050565b60006020828403121561101857611017610d1d565b5b600061102684828501610fed565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061106982610dad565b915061107483610dad565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156110ad576110ac61102f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006110f282610dad565b91506110fd83610dad565b92508261110d5761110c6110b8565b5b828204905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061114e602083610ede565b915061115982611118565b602082019050919050565b6000602082019050818103600083015261117d81611141565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006111ba601f83610ede565b91506111c582611184565b602082019050919050565b600060208201905081810360008301526111e9816111ad565b9050919050565b60006040820190506112056000830185610e3a565b6112126020830184610db7565b9392505050565b60008115159050919050565b61122e81611219565b811461123957600080fd5b50565b60008151905061124b81611225565b92915050565b60006020828403121561126757611266610d1d565b5b60006112758482850161123c565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006112da602a83610ede565b91506112e58261127e565b604082019050919050565b60006020820190508181036000830152611309816112cd565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061136c602683610ede565b915061137782611310565b604082019050919050565b6000602082019050818103600083015261139b8161135f565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156113d65780820151818401526020810190506113bb565b60008484015250505050565b60006113ed826113a2565b6113f781856113ad565b93506114078185602086016113b8565b80840191505092915050565b600061141f82846113e2565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611460601d83610ede565b915061146b8261142a565b602082019050919050565b6000602082019050818103600083015261148f81611453565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b60006114bd82611496565b6114c78185610ede565b93506114d78185602086016113b8565b6114e0816114a1565b840191505092915050565b6000602082019050818103600083015261150581846114b2565b90509291505056fea2646970667358221220d11a0fe13bf0472d9114a64cc331880fbaf02ee720b29175cd52864797cb508864736f6c63430008100033";

type PEPAYFeeSplitterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PEPAYFeeSplitterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PEPAYFeeSplitter__factory extends ContractFactory {
  constructor(...args: PEPAYFeeSplitterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rewardToken: string,
    overrides?: Overrides & { from?: string }
  ): Promise<PEPAYFeeSplitter> {
    return super.deploy(
      _rewardToken,
      overrides || {}
    ) as Promise<PEPAYFeeSplitter>;
  }
  override getDeployTransaction(
    _rewardToken: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_rewardToken, overrides || {});
  }
  override attach(address: string): PEPAYFeeSplitter {
    return super.attach(address) as PEPAYFeeSplitter;
  }
  override connect(signer: Signer): PEPAYFeeSplitter__factory {
    return super.connect(signer) as PEPAYFeeSplitter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PEPAYFeeSplitterInterface {
    return new utils.Interface(_abi) as PEPAYFeeSplitterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PEPAYFeeSplitter {
    return new Contract(address, _abi, signerOrProvider) as PEPAYFeeSplitter;
  }
}
